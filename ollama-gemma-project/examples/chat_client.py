#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —á–∞—Ç-–∫–ª—ñ—î–Ω—Ç –¥–ª—è Ollama Gemma LoRA API
"""

import requests
import json
import sys
from typing import Generator

class ChatClient:
    def __init__(self, api_url: str = "http://localhost:8000"):
        self.api_url = api_url
        self.session = requests.Session()
    
    def check_connection(self) -> bool:
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è"""
        try:
            response = self.session.get(f"{self.api_url}/health")
            print(f"Response from {self.api_url}/health: {response}")
            return response.ollama_ready == True
        except:
            return False
    
    def send_message(self, message: str, temperature: float = 0.7) -> str:
        """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ"""
        payload = {
            "message": message,
            "temperature": temperature,
            "max_tokens": 1000
        }
        
        response = self.session.post(f"{self.api_url}/chat", json=payload)
        
        if response.status_code == 200:
            data = response.json()
            return data.get('response', '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ')
        else:
            return f"–ü–æ–º–∏–ª–∫–∞ API: {response.status_code}"
    
    def send_message_stream(self, message: str, temperature: float = 0.7) -> Generator[str, None, None]:
        """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Å—Ç—Ä—ñ–º—ñ–Ω–≥ –≤—ñ–¥–ø–æ–≤—ñ–¥–¥—é"""
        payload = {
            "message": message,
            "temperature": temperature,
            "stream": True
        }
        
        response = self.session.post(
            f"{self.api_url}/chat",
            json=payload,
            stream=True
        )
        
        if response.status_code == 200:
            for line in response.iter_lines():
                if line:
                    try:
                        line_text = line.decode('utf-8')
                        if line_text.startswith('data: '):
                            data = json.loads(line_text[6:])
                            if 'response' in data:
                                yield data['response']
                    except json.JSONDecodeError:
                        continue
        else:
            yield f"–ü–æ–º–∏–ª–∫–∞ API: {response.status_code}"

def main():
    print("ü§ñ Ollama Gemma HR Assistant")
    print("=" * 40)
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞
    client = ChatClient()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    if not client.check_connection():
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ API")
        print("–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π:")
        print("./manage.sh start")
        sys.exit(1)
    
    print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!")
    print("üí° –í–≤–µ–¥—ñ—Ç—å 'exit' –¥–ª—è –≤–∏—Ö–æ–¥—É")
    print("üí° –í–≤–µ–¥—ñ—Ç—å 'stream' –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å—Ç—Ä—ñ–º—ñ–Ω–≥ —Ä–µ–∂–∏–º—É")
    print("-" * 40)
    
    streaming_mode = False
    
    while True:
        try:
            # –í–≤–µ–¥–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            user_input = input("\nüë§ –í–∏: ").strip()
            
            if user_input.lower() in ['exit', 'quit', '–≤–∏—Ö—ñ–¥']:
                print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
                break
            
            if user_input.lower() == 'stream':
                streaming_mode = not streaming_mode
                mode = "—É–≤—ñ–º–∫–Ω–µ–Ω–∏–π" if streaming_mode else "–≤–∏–º–∫–Ω–µ–Ω–∏–π"
                print(f"üîÑ –°—Ç—Ä—ñ–º—ñ–Ω–≥ —Ä–µ–∂–∏–º {mode}")
                continue
            
            if not user_input:
                continue
            
            # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            print("ü§ñ –ê—Å–∏—Å—Ç–µ–Ω—Ç: ", end="", flush=True)
            
            if streaming_mode:
                # –°—Ç—Ä—ñ–º—ñ–Ω–≥ —Ä–µ–∂–∏–º
                for chunk in client.send_message_stream(user_input):
                    print(chunk, end="", flush=True)
                print()  # –ù–æ–≤–∏–π —Ä—è–¥–æ–∫ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
            else:
                # –ó–≤–∏—á–∞–π–Ω–∏–π —Ä–µ–∂–∏–º
                response = client.send_message(user_input)
                print(response)
                
        except KeyboardInterrupt:
            print("\nüëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break
        except Exception as e:
            print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    main()
