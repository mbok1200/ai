# QUICK START GUIDE
# –®–≤–∏–¥–∫–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –ø–æ –∑–∞–ø—É—Å–∫—É Ollama Gemma LoRA –ø—Ä–æ–µ–∫—Ç—É

echo "üöÄ OLLAMA GEMMA LORA PROJECT - –®–í–ò–î–ö–ò–ô –°–¢–ê–†–¢"
echo "=============================================="

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥
echo "üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥..."

# Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker —Å–ø–æ—á–∞—Ç–∫—É."
    echo "   Ubuntu/Debian: sudo apt install docker.io docker-compose"
    echo "   –ê–±–æ —Å–∫–∞—á–∞–π—Ç–µ –∑: https://docs.docker.com/get-docker/"
    exit 1
fi

# Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π."
    echo "   Ubuntu/Debian: sudo apt install docker-compose"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞–º'—è—Ç—ñ
MEMORY_GB=$(free -g | awk '/^Mem:/{print $2}')
if [ "$MEMORY_GB" -lt 8 ]; then
    echo "‚ö†Ô∏è  –£–≤–∞–≥–∞: –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –º—ñ–Ω—ñ–º—É–º 8GB RAM (–∑–Ω–∞–π–¥–µ–Ω–æ ${MEMORY_GB}GB)"
fi

echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ñ –≤–∏–º–æ–≥–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ LoRA –∞–¥–∞–ø—Ç–µ—Ä–∞
LORA_PATH="/home/mikola/projects/ai/hr-assistant-finetune-1/lora_adapter"
if [ ! -d "$LORA_PATH" ]; then
    echo "‚ùå LoRA –∞–¥–∞–ø—Ç–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $LORA_PATH"
    echo "   –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —à–ª—è—Ö –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π"
    exit 1
fi

echo "‚úÖ LoRA –∞–¥–∞–ø—Ç–µ—Ä –∑–Ω–∞–π–¥–µ–Ω–æ"

# –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–æ–µ–∫—Ç—É
PROJECT_DIR="/home/mikola/projects/ai/ollama-gemma-project"
cd "$PROJECT_DIR"

echo ""
echo "üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ò–ô –ó–ê–ü–£–°–ö"
echo "======================"

# –ö—Ä–æ–∫ 1: –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞
echo "1Ô∏è‚É£  –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç—É..."
./manage.sh setup

# –ö—Ä–æ–∫ 2: –ó–±—ñ—Ä–∫–∞
echo "2Ô∏è‚É£  –ó–±—ñ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑—É..."
./manage.sh build

# –ö—Ä–æ–∫ 3: –ó–∞–ø—É—Å–∫
echo "3Ô∏è‚É£  –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç—É..."
./manage.sh start

echo ""
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—ñ–≤ (–º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω)..."
sleep 30

# –ö—Ä–æ–∫ 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
echo "4Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É..."
./manage.sh status

echo ""
echo "üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø"
echo "=============="
python3 test_api.py

echo ""
echo "üéâ –ü–†–û–ï–ö–¢ –ì–û–¢–û–í–ò–ô!"
echo "=================="
echo ""
echo "üìç –î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:"
echo "   üîó FastAPI:     http://localhost:8000"
echo "   üîó Ollama API:  http://localhost:11434" 
echo "   üîó Web UI:      http://localhost:3000"
echo ""
echo "üí° –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
echo "   ./manage.sh status    - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤"
echo "   ./manage.sh logs      - –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤"
echo "   ./manage.sh test      - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API"
echo "   ./manage.sh stop      - –ó—É–ø–∏–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç—É"
echo ""
echo "üñ•Ô∏è  –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:"
echo "   python3 examples/chat_client.py     - –ö–æ–Ω—Å–æ–ª—å–Ω–∏–π —á–∞—Ç"
echo "   firefox examples/web_client.html    - –í–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: README.md"
